# Generated by Django 5.2.1 on 2025-05-28 22:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_code', models.CharField(db_index=True, max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('full_name', models.CharField(blank=True, max_length=200)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('area_name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'zkbio_employees',
                'ordering': ['emp_code'],
            },
        ),
        migrations.CreateModel(
            name='SyncStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_employees', models.PositiveIntegerField(default=0)),
                ('active_employees', models.PositiveIntegerField(default=0)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('pending_records', models.PositiveIntegerField(default=0)),
                ('synced_records', models.PositiveIntegerField(default=0)),
                ('failed_records', models.PositiveIntegerField(default=0)),
                ('last_zkbio_sync', models.DateTimeField(blank=True, null=True)),
                ('last_erp_sync', models.DateTimeField(blank=True, null=True)),
                ('last_employee_sync', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'zkbio_sync_stats',
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('zkbio_fetch', 'ZKBio Fetch'), ('zkbio_employees', 'ZKBio Employees'), ('erp_sync', 'ERP Sync'), ('system', 'System')], db_index=True, max_length=20)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('warning', 'Warning'), ('info', 'Info')], db_index=True, max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('related_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='zkbioapp.employee')),
            ],
            options={
                'db_table': 'zkbio_sync_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(db_index=True)),
                ('punch_time', models.DateTimeField()),
                ('in_time', models.TimeField(blank=True, null=True)),
                ('out_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('zkbio_transaction_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('erp_attendance_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('sync_attempts', models.PositiveIntegerField(default=0)),
                ('last_sync_attempt', models.DateTimeField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('area_alias', models.CharField(blank=True, max_length=100, null=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='zkbioapp.employee')),
            ],
            options={
                'db_table': 'zkbio_attendance_records',
                'ordering': ['-attendance_date', 'employee__emp_code'],
                'indexes': [models.Index(fields=['status', 'sync_attempts'], name='zkbio_atten_status_b3800c_idx'), models.Index(fields=['attendance_date', 'status'], name='zkbio_atten_attenda_34746e_idx')],
                'unique_together': {('employee', 'attendance_date')},
            },
        ),
    ]
